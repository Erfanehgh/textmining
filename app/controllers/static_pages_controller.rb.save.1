class StaticPagesController < ApplicationController
require 'open-uri'
require 'pdf/reader'
require 'rubygems'
#  def index
 #    render :file => 'app\views\static_pages\upload.html.erb'
 # end

  def upload   

#    post = DataFile.save(params[:upload])
 #   render :text => "File has been uploaded successfully"
  end

def uploadedtext
@first=params[:first]
@second=params[:second]
end

def uploaded

#require 'rubygems'
#require 'pdf-reader'

#uploaded_file =params[:file].original_filename
#reader = PDF::Reader.new(params[:file].path)
#str=""
#reader.pages.each do |page|
#str=str+" "+page.text
#end
#tf=str.gsub! "\n", " "
#@file_content =tf

if !
File.open(params[:file].path, "rb") do |io|
 reader = PDF::Reader.new(io)
str=""
reader.pages.each do |page|
str=str+" "+page.text
end
tf=str.gsub! "\n", " "
@file_content =tf

end
#reader = PDF::Reader.new(params[:file1].path)
File.open(params[:file1].path, "rb") do |io|
  reader = PDF::Reader.new(io)
str=""
reader.pages.each do |page|
str=str+" "+page.text
end
tf1=str.gsub! "\n", " "
@file_content1 =tf1

end



#uploaded_file1 =params[:file1].original_filename
#reader = PDF::Reader.new(uploaded_file1)
#str1=""
#reader.pages.each do |page|
#str1=str1+" "+page.text
#end
#tf2=str1.gsub! "\n", " "
#@file_content1 =tf2  

#puts "file_content"

end

  def index
  end

  def help
  end

  def about
  end

  def contact
  end

  def score
        require './textmining.rb'

	@first = current_user.firstarticle
  	@second=current_user.secondarticle
	text=Textsimilarity.new
	@score=text.calculateSimilarity(@first,@second)
#	render :score
  end

def inputtext
	#@user=User.new		
end

#def new
	
#end
end
